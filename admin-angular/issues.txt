этот файл остался мусором, если что-то ещё актуально, то только эти записи и стоит здесь оставить

ещё вижу в package.json зависимости устаревают по чуть-чуть, надо обновляться и при этом важно указывать точные версии библиотек

proxy файлу место в корне, то что является стандартным и предлагается любым фреймворком надо очень осторожно менять, т.к. новый разработчик (я сейчас) будет искать привычные вещи, которые предлагает само решение фреймворка, например ларавель проект я смог твой без проблем развернуть без супер знаний бека вглубину

приложение плохо оттестил, я вижу ворнинги в консоли, но главное - иногда вижу ошибки в консоли, STR не подскажу, они скорее рандомные какие-то, что где-то отсутствует id



--------------------

В браузере функционально всё работает, это главное, т.е. с работой более чем справился, молодец

Визуальные дефекты и цветовые схемы для фронтенда важнее, чем кажется, сейчас это сомнительная схема по выбранным цветам,
плохой контраст + если часто приходится работать с данными, то никаких ярких цветов не приветствуется, только бренд цвета для акцентов

src/app/types/*
имена файлов должны быть маленькими буквами, так принято во фронте, если не оговоренно в проекте обратное.
Кроме того, использование в названии файлов префиксов I от интерфейсов - лишнее, так не делают
Далее, typings.d.ts - слишком общее название и может превратиться в свалку, конкретно сейчас это ckeditor.d.ts

src/app/interfaces.ts
это такая же свалка, которую надо дробить на раздельные файлы, если надо - в отдельной папке это делать, например
src/app/entities/user.ts

идею модулей пока что ты понял не до конца, стоит ещё читать теорию.
https://angular.io/guide/sharing-ngmodules
Почти всё, что не является пейджами должно было быть в shared.module.ts, который ты экспортировал бы в admin.module.ts

src/app/admin/utils/*
располагается не по месту, эти утилиты однозначно являются частью shared модуля, а не admin module,
т.к. носят общий характер, а не частный как например пейджи админки
